;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(xref--read-identifier-history coding-system-history table-columns-history org-agenda-search-history org-tags-history compile-history helm-grep-history ssh-history magit-read-file-hist file-name-history query-replace-history helm-file-name-history grep-files-history grep-regexp-history input-method-history tmphist read-expression-history shell-command-history magit-read-rev-history org-refile-history minibuffer-history-search-history mu4e~headers-search-hist ess--completing-hist search-ring regexp-search-ring org-capture-template-prompt-history::Amount org-capture-template-prompt-history::Account org-capture-template-prompt-history::Payee org-read-date-history buffer-name-history minibuffer-history))
(setq table-columns-history '("3"))
(setq org-tags-history '("ExportFile"))
(setq helm-grep-history '("logs/2015-06-14-12-43-39-44831A25B1EB3529" "mushroom" #("2015-06-03" 9 10 (rear-nonsticky t)) "2015-06-01" "bigblow" "bigblo" "/Users/yitang/git/.emacs.d/style/personal/css/bigblow-pirilampo.setup" "/Users/yitang/git/.emacs.d/style/personal/css/bigblow-pirilampo" #("**dating" 0 1 (fontified t line-prefix #("*" 0 1 (face org-hide)) wrap-prefix #("    " 0 4 (face org-indent)) face org-hide) 1 8 (fontified t line-prefix #("*" 0 1 (face org-hide)) wrap-prefix #("    " 0 4 (face org-indent)) face org-level-2)) "L&D" #("/bigblow-" 0 9 (fontified t font-lock-fontified t line-prefix nil wrap-prefix nil face org-meta-line org-category "life")) "bigblow-"))
(setq ssh-history '("JBA29" "JBA28 -X -C" "JBA28 -C -X" "JBA28"))
(setq magit-read-file-hist '("effectiveness/2015-06-01-mac-auto-57125OnR" "auto_back.el" "W15-0631-ADRG.org"))
(setq file-name-history '("~/git/.emacs.d/init.org" "~/git/org/refile.org" "~/lala.rst" "~/tmp.org" "~/Downloads/pandoc-1.14.0.4/README" "~/Downloads/pandoc-1.14.0.4/install" "~/.emacs" "/Users/yitang/git/qs/.git/COMMIT_EDITMSG" "~/git/qs/keyfreq/2015-06-22-mac-auto-423013OB" "~/git/qs/tmp" "~/git/org/personal-finance.org" "~/git/org/Finance/ledger" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "~/git/org/vocabulary.org" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "~/git/.emacs.d/personal/ispell-dict" "~/.aspell.en.prepl" "~/.aspell.en.pws" "~/git/org/tmp2.org" "~/git/org/tmp.el" "~/git/voca-builder/docs/Documentation.org" "~/git/org/voca-builder-doc.org" "/Users/yitang/git/qs/.git/COMMIT_EDITMSG" "~/git/qs/keyfreq/2015-06-19-mac-auto-26974Djq" "~/git/qs/effectiveness/2015-06-19-mac-auto-26974Qtw" "~/git/qs/auto_back.el" "/Users/yitang/git/myblog/.git/COMMIT_EDITMSG" "/Users/yitang/git/myblog/.git/COMMIT_EDITMSG" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "~/git/voca-builder/docs/index.rst" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "~/git/voca-builder/README.org" "~/git/voca-builder/README.md" "~/git/voca-builder/index.md" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "~/git/voca-builder/docs/appendix.rst" "~/git/voca-builder/docs/installation.rst" "~/git/voca-builder/docs/usage.rst" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "~/git/voca-builder/docs/welcome-to-vocabuilder.rst" "~/git/voca-builder/docs/lalal.rst" "~/git/voca-builder/ChangeLog.org" "~/git-others/org-mode/Makefile" "~/git-others/org-mode/README_git" "~/git-others/org-mode/README" "~/git-others/ox-rst/ox-rst.el" "~/git/voca-builder/voca-builder.el" "~/git/org/books.org" "~/git/qs/keyfreq/2015-06-02-ubuntu-auto-14940tS2" "~/git/qs/ParseData/keyfreq.R" "~/git/qs/ParseData/eff.main.R" "/Users/yitang/git/qs/.git/COMMIT_EDITMSG" "~/git/qs/ParseData/efftiveness.R" "~/git/qs/effectiveness/2015-06-14-mac-auto-887gQJ" "/Users/yitang/git/qs/.git/COMMIT_EDITMSG" "/Users/yitang/git/.emacs.d/.git/COMMIT_EDITMSG" "~/git/myblog/_config.yml" "~/git/org/Profession/Blogging.org" "~/git/myblog/_includes/twitter_plug.html" "~/git/MyBlog/_config.yml" "~/git/myblog/_posts/2015-06-14-use-emacss-orgmode-to-manage-a-small-project.html" "~/git/myblog/upload.sh" "~/git/myblog/AutoPush.sh" "~/git/MyBlog/_posts/2015-06-14-use-emacss-orgmode-to-manage-a-small-project.html" "~/git/MyBlog/org/_posts/2014-12-17-jekyll.org" "~/git/jbarm/W15-0631-ADRG.org" "~/git/org/img/mini-calendar-buffer.png" "~/git/MyBlog/org/_posts/2015-05-06-control-the-plotting-order-in-ggplot2.org" "/Users/yitang/git/qs/.git/COMMIT_EDITMSG" "~/git/qs/effectiveness/2015-06-01-mac-auto-57125OnR" "~/git/qs/effectiveness/2015-05-27-mac-auto-37461HCk" "~/git/qs/effectiveness/tmp.lala" "~/git/qs/effectiveness/2015-05-20-ubuntu-auto-21779Idm" "/Users/yitang/git/qs/.git/COMMIT_EDITMSG" "/Users/yitang/git/qs/.git/COMMIT_EDITMSG" "~/git/R/activitydashboard2/server.R" "~/git/qs/effectiveness/2015-06-12-mac-auto-836DeM" "/Users/yitang/git/qs/.git/COMMIT_EDITMSG" "~/git/qs/keyfreq/2015-06-10-ubuntu-auto-17536SMu" "/Users/yitang/git/qs/.git/COMMIT_EDITMSG" "~/git/qs/effectiveness/2015-06-03-ubuntu-auto-14940tZq" "~/git/qs/effectiveness/2015-06-03-ubuntu-auto-14940TFe" "~/git/org/tmp.R" "~/Dropbox/Personal Documents/Employment/P60 (Apr 2015) Sage Email.pdf" "/Users/yitang/git/qs/.git/COMMIT_EDITMSG" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "~/Desktop/temp/melpa/recipes/voca-builder" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "/Users/yitang/git/voca-builder/.git/COMMIT_EDITMSG" "~/git/org/people.org" "~/git/org/Finance/personal-finance.org" "~/git/qs/effectiveness/2015-05-31-mac-auto-571250SF" "~/git/qs/effectiveness/2015-06-05-mac-auto-64985aYg" "~/git/org/Profession/ShinyApp.org" "~/.emacs.d/elpa/exec-path-from-shell-20141212.846/exec-path-from-shell-autoloads.el"))
(setq query-replace-history '("\\n" ") ("))
(setq helm-file-name-history '("org-effectiveness.el" "Blogging.org" "W13-3814-ADRG.org" "temp.png" "init.org" "COMMIT_EDITMSG" "projectile.cache" "projectile-bookmarks.eld" "W15-0631-ADRG.org" "tmp.org" "COMMIT_EDITMSG" "IT.org" "digital-life.org" "COMMIT_EDITMSG" "history" "COMMIT_EDITMSG" "config" "config" "COMMIT_EDITMSG" "COMMIT_EDITMSG" ".emacs" "org-clock-save.el" "f-autoloads.el" "olivetti-autoloads.el" "pretty-mode-autoloads.el" "keyfreq-autoloads.el" "sunshine-autoloads.el" "gist-autoloads.el" "gh-autoloads.el" "pcache-autoloads.el"))
(setq grep-files-history '("*" "*.el"))
(setq grep-regexp-history '("2015-06-14-12-43-39-44831A25B1EB3529" "+0100" "effectiveness"))
(setq read-expression-history '("(require 'csv)" "(emacs-version)" "(require 'ox-pandoc)" "(setq org-hide-block-startup t)" "(org-version)" "(require 'org-habit)" "test" "(test)" "(helm-find-files-copy)" "(org-version)" "(jekyll-make-slug \"Why I Should Expore Regular Expression and Why I Haven't\")" "(yt/org-export-this-header)" "(require 'ox-org)" "(yt/org-export-this-header)" "(search-backward \"index\")" "(yt/org-export-this-header)" "(require 'ox-rst)" "(yt/email-icloud)" "(setq org-export-with-planning nil)" "(yt/email-jba)" "(setq voca-builder/current-tag \"Gene\")" "(concat 4 \",\")" "(set-face-attribute 'default nil :height 100)" "(set-face-attribute 'default nil :height 200)" "(set-face-attribute 'default nil :height 160)" "(set-face-attribute 'default nil :height 150)" "(set-face-attribute 'default nil :height 140)" "(decode-time 1)" "(setq time-stamp (format-time-string \"%F %R\"))" "(replace-string \") (\" \"\\n\")" "(replace-string \") (\" \"\")" "(replace-string \") \")" "(search-forward-regexp \":PROPERTIES:\\n:END:\")" "(yt/org-subtree-refile-to \"* Tasks\")" "(org-entry-delete (point) \"ID\")" "(yt/org-subtree-refile-to \"* Tasks\")" "(org-id-open \"yt/refile:6E2C9DE4-68BE-4F4C-A3AE-0823B8E53E43\")" "  (let ((org-id-prefix \"yt/refile\"))
    (org-id-get-create))" "(org-id-new \"yt/refile\")" "(org-id-new)" "(yt/org-subtree-refile-to-tasks-subtree)" "(yt/org-subtree-remove-drawer)" "(org-remove-empty-drawer-at \":LOGBOOK:\" (point))" "(org-remove-empty-drawer-at)" "(org-get-tags)" "(setq temp (org-entry-properties))" "(org-entry-properties)" "(org-entry-get (point) \"CLOCK\")" "(org-entry-get \"CLOCK\")" "(yt/org-subtree-clock-entry-p)" "(setq temp (org-entry-properties))" "(setq temp org-entry-properties)" "(org-entry-properties)" "(org-pro" "(yt/has-clock-info-p)" "    (while (or (re-search-forward \"CLOCK: \" nil t)
	       (not (= (point) (point-max))))
      (cond ((yt/clock-line-is-org-clock)
	     (+ count 1)
	     (goto-char (point-max)))
	    t nil))" "(yt/has-clock-info-p)" "(yt/clock-line-is-org-clock)" "(search-forward \"CLOCK: \")" "(search-forward)" "(yt/has-clock-info-p)" "(point-max)" "(point)" "(setq temp (org-element-at-point))" "(org-element-at-point)" "(require 'org-element)" "(let ((org-archive-location \"::* Tasks\"))
  (beginning-of-buffer)
  (search-forward-regexp \"^\\* Notes\")
  (while (search-forward-regexp \"^\\*\")
    (org-archive-subtree)))" "  (search-forward-regexp \"^\\* Notes\")" "
(let ((org-archive-location \"::* Tasks\"))
  (beginning-of-buffer)
  (search-forward-regexp \"^\\* Notes\")
  (while (search-forward-regexp \"^\\*\")
    (org-archive-to-archive-sibling)))" "(let ((org-archive-location \"::* Archived Tasks\"))
  (beginning-of-buffer)
  (search-forward-regexp \"^\\* Notes\")
  (while (search-forward-regexp \"^\\*\")
    (org-archive-to-archive-sibling)))" "(let ((org-refile-targets '((nil :regexp . \"Tasks\"))))
  (beginning-of-buffer)
  (search-forward-regexp \"^\\* Notes\")
  (while (search-forward-regexp \"^\\*\")
    (org-refile)))" "(let ((org-refile-targets '((nil :regexp . \"Tasks\"))))
  (beginning-of-buffer)
  (search-forward-regexp \"^\\* Notes\")
  (while (search-forward-regexp \"^\\*\")
    (refile)))" "(let ((org-refile-targets ((nil :regexp . \"Tasks\"))))
  (beginning-of-buffer)
  (search-forward-regexp \"^\\* Notes\")
  (while (search-forward-regexp \"^\\*\")
    (refile)))" "(search-forward-regexp \"^\\* Notes\")" "(search-forward \"^\\* Notes\")" "      (search-forward \"^\\* Notes\")" "(yt/copy-to-local)" "(setq voca-builder/current-tag \"Grain Brain\")" "(setq olivetti-body-width 120)" "(replace-regexp \"^\\|$\" \"\\\"\")" "(replace-regexp \"^\\|$\" \"\\\" \")" "(flush-lines \"^$\")" "(flush-lines \"^\\n\")" "(replace-regexp \"\\n\" \"\\\" \")" "(replace-regexp \"^\" \"\\\"\")" "(replace-regexp \"\\n\" \"\\\" \")" "(replace-regexp \"^\" \"\\\"\")" "(replace-regexp \"\\n\" \"\\\" \")" "(replace-regexp \"\\n\" \"\\\"\")" "(replace-regexp \"^\" \"\\\"\")" "(replace-regexp \"\\(^\\)\\|\\(\\n\\)\" \"\\\"\")" "(replace-regexp \"^\\|\\n\" \"\\\"\")" "(replace-regexp \"^|\\n\" \"\\\"\")" "(replace-regexp \"^\" \"\\\"\")" "    (replace-regexp \"#### \" \"\\n#### \")" "(replace-regexp \"p\\n\" \"p\\n\\n\")" "(replace-regexp \"p\\n\" \"p\\n\\n\"_" "    (replace-regexp \"#### \" \"\\n#### \")" "ls" "tree -L 2"))
(setq shell-command-history '("rm README.md" "mv README.md" "cp docs/index.rst README.rst" "find --size 0" "find -size 0" "./upload.sh" "ls" "eshell" "gitk" "git log 2015-06-01-mac-auto-57125OnR" "gitmtim" "gitmtime" "mv Finance/personal-finance.org ." "date +\"%F\"" "date+\"%F\"" "date" "tree -L 2" "rm tryout.el" "tree -L 2" "tree -L" "mv personal/personal-dict personal/ispell-dict" "mv personal-dict personal/" "ls" "mkdir personal" "tree -L 2" "rm style/4_window_layout.purpose" "tree -L 2" "rm -rf java" "tree -L 2" "mv lisp/ lisp-bk" "rm -rf yt/" "tree -L 2" "tree" "ls" "rm CNMAE" "cp init.html index.html" "cp -rf media/sf_share/ADRGExample ~/Desktop/ADRG_Example" "cp media/sf_share/ADRGExample ~/Desktop/ADRG_Example" "mkdir ~/Desktop/ADRG_Example" "git svn dcommit"))
(setq magit-read-rev-history '("origin/master"))
(setq org-refile-history '("Tasks/ (life.org)" "tasks emacs.og" "Tasks/ (life.org)" "Tasks/ (Blogging.org)" "voca-builder/ (Emacs.org)" "voca-builder/ (Emacs.org)" "Leisure/ (life.org)" "Tasks/ (Emacs.org)" "Linux/Notes/linux - delete empty file/ (IT.org)" "Tasks/ (web-development.org)" #("Blog archives" 0 13 (org-category "Blogging" fontified nil)) "Blog archives/" "Leisure/ (life.org)" "Tasks/ (life.org)" #("Tasks" 0 5 (face org-level-1 org-category "Career" wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil fontified t)) "Tasks/" "Tasks/" "Tasks/" "PhD studentship/ (PhD.org)" "Tasks/ (life.org)" "Tasks/ (digital.org)" "Tasks/ (life.org)" "Tasks/ (Emacs.org)" #("Tasks" 0 5 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil fontified t)) "Tasks/" #("Notes" 0 5 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "Emacs" fontified t)) "Notes/" #("Notes" 0 5 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "Emacs" fontified t)) "Notes/" "Tasks" "Tasks/" "Tasks/" #("Notes" 0 5 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "Emacs" fontified t)) "Notes/" #("Notes" 0 5 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "Emacs" fontified t)) "Notes/" #("Tasks" 0 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil face org-level-1 org-category "Emacs" fontified t)) "Tasks/" "Tasks/" "Tasks/" "Tasks/" "Notes/" #("Tasks" 0 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil face org-level-1 org-category "Emacs" fontified t)) "Tasks/" #("Tasks" 0 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil face org-level-1 org-category "Emacs" fontified t)) "Tasks/" "Tasks/" #("Notes" 0 5 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "Emacs" fontified t)) "Notes/" #("Notes" 0 5 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "Emacs" fontified t)) "Notes/" #("Tasks" 0 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil face org-level-1 org-category "Emacs" fontified t)) "Tasks/" "Tasks/" "Tasks/" "Notes/" "Tasks" "Tasks/" "Tasks/" "Tasks/" #("Tasks" 0 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil face org-level-1 org-category "Emacs" fontified t)) "Tasks/" "Notes/" #("Tasks" 0 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil face org-level-1 org-category "Emacs" fontified t)) "Tasks/" #("Notes" 0 5 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "Emacs" fontified t)) "Notes/" "Notes/" "Tasks/ (Emacs.org)" "Tasks/ (Emacs.org)" "Tasks/ (digital.org)" "Tasks/ (Career.org)" "Tasks/ (Blogging.org)" "Tasks/ (life.org)" "Tasks/ (life.org)" "Tasks/ (Statistics.org)" "Tasks/ (life.org)" "Linux/Tasks/ (IT.org)" "Tasks/ (web-development.org)" "Linux/Tasks/ (IT.org)" "Tasks/ (life.org)" "Tasks/ (Statistics.org)" "Tasks/ (digital.org)" "Tasks/ (ShinyApp.org)" "Tasks/ (life.org)" "2nd Job/ (Career.org)" "Tasks/ (life.org)" "Tasks/ (digital.org)" "Tasks/ (Emacs.org)" #("JBA" 0 3 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil fontified t)) "JBA/" "Tasks/ (R_Language.org)" "Tasks/ (ShinyApp.org)" "Tasks/ (digital-life.org)" "Tasks/ (digital-life.org)" "2nd Job/ (Career.org)" #("JBA" 0 3 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil fontified t)) "JBA/" #("JBA" 0 3 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil fontified t)) "JBA/"))
(setq mu4e~headers-search-hist '("warwickgrad" "warwick" "from: Jessica Skeggs" "from: Jess" "from: Jessica" "from: Jessica Skeggs" "from: Jess" "james"))
(setq ess--completing-hist '("*R:2*" "R" "*ssh JBA28*" "R" "/Library/Frameworks/R.framework/Versions/3.1/Resources/library/lubridate/help/month" "C++" "DEFAULT" "C++" "BSD" "GNU" "DEFAULT" "OWN" "R" "*ADRG-Canada*" "findVulFunc" "findHazard" "*R-main*" "*R:2*" "R-28-Hurricane" "R-28" "R-28-Hurricane" "R-29" "R-28" "C++" "GNU" "DEFAULT" "OWN" "R-28" "R" "*R-main*" "R-28" "R"))
(setq search-ring '("yt/test" "helm" "remove" "meta" "info" "15" "org-ver" "w" "pull" "$" "." "dot" "their" "haven" "extend" "g"))
(setq regexp-search-ring '("read" "sys" "tmp2 <-" "tmp <-" "theme" "gsub" "eff[" "eff" "p" "dev" "p" "prin" "pri" "dev.o" "diag" "den"))
(setq org-capture-template-prompt-history::Amount '("350 ;; rent" "35.00 ;; coffee machine, huge discount, save £90" "16.98 ;; Reebok running shoes, big discount" "5.00 ;; budwiser" "2.00 ; sandwih" "4.80" "9.68" "10" "3.83 ;; english breakfast" "2.80 ;; sandwich" "5.00 ;; goodbagg" "6.10" "6.00 ; watch Jurassic World. the movies is shit" "2.00" "2.60" "3.10" "9.10 ;; not worth it" "2.60" "20.98" "" "9.65" "10 " "" "2.60" "1.85" "2.50;" "7.03" "1.80" "5.72" "10 ;; top up " "20.00" "6.00 ; watch spy, really enjoy it." "2.70" "9.50 ;; Leeds" "1.50;" "5.00" "6.81" "2.79" "5.02" "8.12" "2.35" "20" "12" "20" "2.35" "5.78" "2.35" "4.85" "5.14" "18.08" "4.70" "4.99" "9.37 " "14.77" "4.50 ;; double" "3.70" "5.70" "1.65"))
(setq org-capture-template-prompt-history::Account '("Expenses:Bill:Rent" "Expenses:Household:Appliances" "Expenses:Clothes:Shoes" "Expenses:Leisure:Drink:Beer" "Expenses:Food:Lunch" "Expenses:Transport:Commute" "Expenses:Food:Grocery" "Expenses:Food:Dinner" "Expenses:Food:Lunch" "Expenses:Food:Lunch" "2.80" "Expenses:Bill:Phone" "Expenses:Food:Dinner" "Expenses:Entertain:Cinema" "Expenses:Food:Dinner" "Expenses:Transport:Commute" "Expenses:Transport:Commute" "Expenses:Food:Dinner" "Expenses:Transport:Commute" "Expenses:Food:Grocery" "Expenses:Food:Grocery" "Expenses:Food:Grocery" "Expenses:Food:Grocery" "Expenses:Transport:Commute" "Expenses:Leisure:Drink:Coffee" "Expenses:Food:Lunch" "Expenses:Food:Grocery" "Expenses:Food:Grocery" "Expenses:Food:Grocery" "Expenses:Bill:Phone" "Expenses:Transport:Commute" "Expenses:Entertain:Cinema" "Expenses:Leisure:Drink:Coffee" "Expenses:Transport:Train" "Expenses:Food:Lunch" "Expenses:Leisure:Drink:Beer" "Expenses:Food:Grocery" "Expenses:Food:Grocery" "Expenses:Food:Grocery" "Expenses:Food:Grocery" "Expenses:Food:Lunch" "Expenses:Food:Lunch" "Expenses:Transport:Commute" "Expenses:Transport:Train" "Expenses:Food:Lunch" "Expenses:Food:Lunch" "Expenses:Food:Grocery" "Expenses:Food:Lunch" "Expenses:Food:Lunch" "Expenses:Leisure:Drink:Beer" "Expenses:Food:Grocery" "Expenses:Leisure:Drink:Coffee" "Assets:Checking" "Assets:Savings" "Equity:MacBookPro13" "Equity:Opening Balances" "Expenses:Bill:Phone" "Expenses:Bill:Rent" "Expenses:Books" "Expenses:Clothes:Shirts" "Expenses:Clothes:Shoes" "Expenses:Clothes:T-shirts" "Expenses:Clothes:Trousers" "Expenses:Education:Stationary" "Expenses:Electronics:Accesory" "Expenses:Entertain:Cinema" "Expenses:Food:Breakfast" "Expenses:Food:Dinner" "Expenses:Food:Grocery" "Expenses:Food:Lunch" "Expenses:Food:Snack" "Expenses:Gifts" "Expenses:Healthcare" "Expenses:Healthcare:Accessooary" "Expenses:Healthcare:Accessory" "Expenses:Healthcare:EssentialProducts" "Expenses:Healthcare:Haircut" "Expenses:Healthcare:Supplement" "Expenses:Household:Accessory" "Expenses:Household:Appliances" "Expenses:Household:Cookware" "Expenses:Leisure:Drink:Beer" "Expenses:Leisure:Drink:Coffee" "Expenses:Leisure:Drink:Others" "Expenses:Leisure:Drink:Wine" "Expenses:Special:Cig" "Expenses:Transport:Commute" "Expenses:Transport:Train" "Expenses:clothes:Accessory" "Income:Salary" "Insurance:AppleCareMBP"))
(setq org-capture-template-prompt-history::Payee '("Oliver" "Tassimo" "Online-shop" "Tesco" "Skipton-Cobble's" "Skipton-Bus" "Tesco" "Skipton-Jack" "Morrisons" "Skipton-Utopia" "Skipton-Utopia" "GiffGaff" "SKipton-Devonsnire" "Skipton-Cinema" "SKipton-HS" "Skipton-Bus" "Skipton-Bus" "Skipton-CastleInn" "Skipton-Bus" "Tesco" "20.98" "Tesco" "Tesco" "Tesco" "Skipton-Bus" "Skipton-Utopia" "Skipton-Utopia" "Tesco" "Tesco" "Tesco" "GiffGaff" "Skipton-Bus" "Skipton-Cinema" "Caffè Nero" "Skipton-Train" "Skipton-HS" "Tesco" "Tesco" "Tesco" "Tesco" "Tesco" "Skipton-Utopia" "Skipton-Utopia" "Skipton-Bus" "Skipton-Bus" "SKipton-Kong's" "Skipton-Utopia" "Tesco" "Skipton-Utopia" "Skipton-Utopia" "Devonshire Inn" "Tesco" "Caffè Nero" "<Unspecified payee>" "Amazon" "Apple" "BUS" "Boots" "Caffè Nero" "GiffGaff" "Giffgaff" "H&B" "HS" "JBARM" "MacDonalds" "McDonals's" "NEXT" "NeroCaffee" "Oliver" "Opening Balance" "Primark" "Skipton-Bus" "Skipton-Cobble's" "Skipton-HS" "Skipton-Train" "Skipton-Utopia" "Skipton_Hongkong-takeway" "TKMAX" "TKMAXX" "TKmax" "Tesco" "UKCNShop" "YiTang"))
(setq org-read-date-history '("   " "    " "   " "                                 " "   " "17:00    " "   " "09:00    " "21:00-22:00    " "   " "21:00    " "   " "20:00    " "14:00    " "   " "14:00    " "12:00+1    " "19:00-20:00    " "15:30-16:30    " "1530-1630    " "   " "            " "   " "12:00    " "    " "   " "12:00-13:00    " "08:00-09:00    " "15:00    " "08:00+0:30    " "   " "14:00    " "14:00-16:00    " "13:30-14:00    " "12:00-13:30    " "11:17-12:00    " "14:00    " "08:00-08:30    " "            " "   " "20:30-22:00    " "12:00-17:00    " "13:00-14:30    " "10:30-12:00    " "09:00-10:30    " "18:00    " "13:00    " "08:00    " "   " "2015-06-17    " "   "))
(setq buffer-name-history '("*frequencies*" "tmp.org<yitang>" "refile.org" "personal-finance.org" "ledger" "vocabulary.org" "ispell-dict" ".aspell.en.pws" ".aspell.en.prepl" "ispell-dict" "helm-utils.el" "Documentation.org" "2015-06-18-mac-auto-26974Djq" "2015-06-18-mac-auto-26974Qtw" "*Messages*" "2015-06-18-why-i-should-explore-regular-expression-and-why-i-havent.org" "index.rst" "README.org" "README" "README.org" "README.md" "index.md" "ox-org.el" "appendix.rst" "index.rst" "usage.rst" "*Help*" "appendix.rst" "*Help*" "README.org" "README.md" "index.rst" "init.org" "README" "README_git" "Makefile" "voca-builder.el" "2015-06-14-use-emacss-orgmode-to-effectively-manage-small-projects.org" "init.org" "2015-06-14-mac-auto-887gQJ" "tmp.lala" "*Shell Command Output*" "*draft*" "*Shell Command Output*" " *Minibuf-1*" "*Clock Task Select*" "*Messages*" "tmp.lala" "*magit: qs*" "*eff*" "2015-06-12-mac-auto-836DeM" "2015-05-20-ubuntu-auto-21779Idm" "2015-06-01-mac-auto-57125OnR" "2015-05-20-ubuntu-auto-21779Idm" "tmp.R" "*R:2*" "*eff*" "2015-06-12-mac-auto-836DeM" "2015-06-10-ubuntu-auto-17536SMu" "2015-06-03-ubuntu-auto-14940TFe" "2015-06-03-ubuntu-auto-14940tZq" "*Clock Task Select*" "2015-06-05-mac-auto-64985NOa" "2015-06-05-mac-auto-64985aYg" " *mu4e-main*" "vocabulary.org" "*Shell Command Output*" "quotes.org" "life.org" "Blogging.org" "*draft*" "auto_back.el" "*Shell Command Output*" "2015-05-31-mac-auto-57125CJ2" "*frequencies*" "2015-05-31-mac-auto-57125CJ2" "2015-05-31-mac-auto-571250SF" "NEWS" "books.org" "metadata.opf" "EC2" "ProcessKeyfreq.R" "server.R" "ui.R" "*Shell Command Output*" "ProcessGPX.R" "keyfreq.R" "*frequencies*" "2015-05-27-mac-auto-3746159K" "2015-05-18-mac" "2015-05-18-ubuntu" "2015-05-18-ubuntu-auto-13266pco" "*-207334323101254192*" "*-75759046834184700*" "*Help*" "*Async Shell Command*" "*Async Shell Command*<2>" "*Async Shell Command*" "*magit-commit*" "*Async Shell Command*"))
(setq minibuffer-history '(".emacs.d init.org" "refile" "voca" "refile" "my par" "eshell" "keyfreq" "Mark" "mess" #("+begin_example" 0 14 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) "keyfreq" "hydra test" "keyfreq" "emacs.org" #("sometimes" 0 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 7 (face org-indent)) org-category "Blogging")) "keyfreq" "yt qs log" "yt git save" "save all buffer" #("2370" 0 4 (fontified t org-category #("Finance" 0 7 (fontified t org-category "Finance" org-category-position 18 font-lock-fontified t face org-meta-line)) org-category-position 18)) #("*" 0 1 (fontified t org-category "life" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) face org-level-1)) #("**" 0 1 (fontified t org-category "life" org-effort "0:15" line-prefix #("*" 0 1 (face org-hide)) wrap-prefix #("    " 0 4 (face org-indent)) org-todo-head #("TODO" 0 4 (face (:foreground "red" :weight bold))) face org-hide) 1 2 (fontified t org-category "life" org-effort "0:15" line-prefix #("*" 0 1 (face org-hide)) wrap-prefix #("    " 0 4 (face org-indent)) org-todo-head #("TODO" 0 4 (face (:foreground "red" :weight bold))) face org-level-2)) "blog" "eshell" "" "git svn" "blog" "refile" "qs log" "yt save " "save all buffer" "refile" "text incre" "blogging" "refile" "emacs.org" "refile" "save all buffer" "refile" "/Users/yitang/lal" #("*" 0 1 (fontified t line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) composition (0 1 [9673]) keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face org-level-1)) "/Users/yitang/tmp.org" "mess" "git save" "refile" "ox pandoc" "pac in" "package fre" "pandoc ox" "package instal" "ox pandoc" "package install" "/Users/yitang/Downloads/pandoc-1.14.0.4/" "/Users/yitang/Downloads/pandoc-1.14.0.4/install" "yt save back" "refile" ".emacs" "refile" "/Users/yitang/git/qs/keyfreq/2015-06-22-mac-auto-423013OB-for-21-22" "yt rename " "/Users/yitang/git/qs/keyfreq/" "/Users/yitang/git/qs/" "helm projectile fin" "helm projectile" "qs log" "keyfreq" "life" "digital" "books" #("*" 0 1 (fontified t org-category "vocabulary" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) composition (0 1 [9673]) keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face org-level-1)) "org demote" "org do demote" "org demote " "org demote" "org yank" "org copy sub" "vocabu" "books" "org agenda level" "org get at bol" "marker" "init.org" "rent" "ledger" "finance " "org-hide-block-startup" "org startup" "finance" "ledger" "led" "org read date" "refile" "emacs org" ".emacs" "org-v " "emacs" "save all buffer" "increase " #("voca" 0 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 3 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t)) "emacs"))
