;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(helm-grep-history ssh-history magit-read-file-hist file-name-history query-replace-history helm-file-name-history grep-files-history grep-regexp-history input-method-history tmphist read-expression-history shell-command-history magit-read-rev-history org-refile-history minibuffer-history-search-history mu4e~headers-search-hist ess--completing-hist search-ring regexp-search-ring org-capture-template-prompt-history::Amount org-capture-template-prompt-history::Account org-capture-template-prompt-history::Payee org-read-date-history buffer-name-history minibuffer-history))
(setq helm-grep-history '(#("/bigblow-" 0 9 (fontified t font-lock-fontified t line-prefix nil wrap-prefix nil face org-meta-line org-category "life")) "bigblow-"))
(setq ssh-history '("JBA28 -C -X" "JBA28"))
(setq magit-read-file-hist '("W15-0631-ADRG.org"))
(setq file-name-history '("/home/yitang/git/.emacs.d/.git/COMMIT_EDITMSG" "~/git/.emacs.d/init.org" "/home/yitang/git/.emacs.d/.git/COMMIT_EDITMSG" "/home/yitang/git/qs/.git/COMMIT_EDITMSG" "~/git/qs/auto_back.el" "/home/yitang/git/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs" "/home/yitang/git/.emacs.d/.git/COMMIT_EDITMSG" "~/.Rprofile" "/home/yitang/git/.emacs.d/.git/COMMIT_EDITMSG" "~/git/org/Profession/Emacs.org" "/home/yitang/git/.emacs.d/.git/COMMIT_EDITMSG" "~/git/org/Profession/Blogging.org" "~/SVN/GFES-git/Script/Validation/Hurricane/ValidateHurricaneSpatialVariation.R" "~/SVN/GFES-git/Script/Validation/Hurricane/ValidateHurricaneTravelDistance.R" "~/SVN/GFES-git/Script/Validation/Hurricane/ValidateHurricaneLife.R" "/home/yitang/SVN/GFES-git/.git/COMMIT_EDITMSG" "~/SVN/GFES-git/Script/Validation/Precipitation/ValidatingNhiPrecipitationTrigger.R" "~/SVN/GFES-git/Script/Validation/Hurricane/ValidateHIP.R" "~/SVN/GFES-git/Script/Validation/Precipitation/ValidatingNhiPrecipitationMarginalDistribution.R" "~/tmp.tangle.R" "~/git/.emacs.d/tryout.el" "~/SVN/GFES-git/Script/Validation/Hurricane/CrossLonLat.R" "~/cron_backup_houly_log" "/home/yitang/git/.emacs.d/.git/COMMIT_EDITMSG" "~/git/.emacs.d/auto-back.el" "~/cron_5_min_log" "~/cron-backup" "~/cron_back_log" "/etc/cron.hourly/cron-backup"))
(setq query-replace-history '("\\n" ") ("))
(setq helm-file-name-history '("org-effectiveness.el" "Blogging.org" "W13-3814-ADRG.org" "temp.png" "init.org" "COMMIT_EDITMSG" "projectile.cache" "projectile-bookmarks.eld" "W15-0631-ADRG.org" "tmp.org" "COMMIT_EDITMSG" "IT.org" "digital-life.org" "COMMIT_EDITMSG" "history" "COMMIT_EDITMSG" "config" "config" "COMMIT_EDITMSG" "COMMIT_EDITMSG" ".emacs" "org-clock-save.el" "f-autoloads.el" "olivetti-autoloads.el" "pretty-mode-autoloads.el" "keyfreq-autoloads.el" "sunshine-autoloads.el" "gist-autoloads.el" "gh-autoloads.el" "pcache-autoloads.el"))
(setq grep-files-history '("*.el"))
(setq grep-regexp-history '("effectiveness"))
(setq read-expression-history '("ls" "tree -L 2" "(delete-region (point) (point-max))" "(delete-region (point) (point-max)" "(search-backward \"#### change this\")" "(search-backward \"####\")" "(replace-string \"\\\"\" \"\\\\\"\")" "(setq org-babel-post-tangle-hook nil)" "(require 'highlight-80+)" "    (flush-lines \"^$\")" "    (flush-lines \"[[:space:]]+## \")" "(flush-lines \"^## \")" "  (replace-regexp \"#### \" \"\\n####\")" "(search-forward-regexp \"\\n\\\\{3,\\\\}\")" "(search-forward-regexp \"\\n\\\\{2,\\\\}\")" "(search-forward-regexp \"[\\n]\\\\{2,\\\\}\")" "(search-forward-regexp \"[\\n]\\{2,\\}\")" "(search-forward-regexp \"[\\n]+\")" "(search-forward-regexp \"{\\n}+\")" "(search-forward-regexp \"\\n+\")" "(search-forward-regexp \"[[\\n]]+\")" "(search-forward-regexp \"[[\\n]]\\{2, \\}\")" "(search-forward-regexp \"[\\n]\\{2, \\}\")" "(search-forward-regexp \"[\\n]{2, }\")" "(search-forward-regexp \"\\n{2, }\")" "(search-forward-regexp \"\\n\")" "(search-forward-regexp \"\\n\\{2, \\}\")" "(search-forward-regexp \"^J\\{2, \\}\")" "(flush-lines \"^$\")" "(flush-lines \"[[:space:]]+##\")"))
(setq shell-command-history '("tree -L 2" "rm tryout.el" "tree -L 2" "tree -L" "mv personal/personal-dict personal/ispell-dict" "mv personal-dict personal/" "ls" "mkdir personal" "tree -L 2" "rm style/4_window_layout.purpose" "tree -L 2" "rm -rf java" "tree -L 2" "mv lisp/ lisp-bk" "rm -rf yt/" "tree -L 2" "tree" "ls" "rm CNMAE" "cp init.html index.html" "cp -rf media/sf_share/ADRGExample ~/Desktop/ADRG_Example" "cp media/sf_share/ADRGExample ~/Desktop/ADRG_Example" "mkdir ~/Desktop/ADRG_Example" "git svn dcommit"))
(setq org-refile-history '(#("Emacs Configuration/Refile" 0 19 (face org-level-1 fontified nil line-prefix nil wrap-prefix #("  " 0 2 (face org-indent))) 20 26 (face org-level-2 fontified nil line-prefix #("*" 0 1 (face org-hide)) wrap-prefix #("    " 0 4 (face org-indent)))) "Emacs Configuration/Refile/" "Tasks/ (jbarm.org)" "Tasks/ (jbarm.org)" #("Notes" 0 5 (face org-level-1 org-category-position 1 org-category #("ADRG" 0 4 (fontified t org-category "ADRG" org-category-position 1 font-lock-fontified t face org-meta-line)) fontified t)) "Notes/" "Tasks" "Tasks" "Tasks/" "Notes/ (jbarm.org)" #("Tasks" 0 5 (face org-level-1 org-category-position 1 org-category #("ADRG" 0 4 (fontified t org-category "ADRG" org-category-position 1 font-lock-fontified t face org-meta-line)) fontified t)) "Tasks/" "Notes/ (jbarm.org)" "Tasks" "Tasks/" "Tasks/ (2013s7553-GFES.org)" "Tasks/Meeting Notes/ (jbarm.org)"))
(setq mu4e~headers-search-hist '("warwickgrad" "warwick" "from: Jessica Skeggs" "from: Jess" "from: Jessica" "from: Jessica Skeggs" "from: Jess" "james"))
(setq ess--completing-hist '("C++" "DEFAULT" "C++" "BSD" "GNU" "DEFAULT" "OWN" "R" "*ADRG-Canada*" "findVulFunc" "findHazard" "*R-main*" "*R:2*" "R-28-Hurricane" "R-28" "R-28-Hurricane" "R-29" "R-28" "C++" "GNU" "DEFAULT" "OWN" "R-28" "R" "*R-main*" "R-28" "R"))
(setq search-ring '("end" "pre" "delete" "size" "title" "+" "^" "lon" ")" "tit" "sudo" "modeline" "effectiveness" "find-c" "url" "src"))
(setq regexp-search-ring '("diag" "den" "set" "points" "po" "hist" "h" "ggplot" "gg" "ggplot" "x_wind <-" "ggplo" "ggp	" "ggplot" "wind." "lati"))
(setq org-capture-template-prompt-history::Amount '("4.50 ;; double" "3.70" "5.70" "1.65"))
(setq org-capture-template-prompt-history::Account '("Food:Lunch" "Lunch" "Food:Dinner" "Leisure:Drink:Others"))
(setq org-capture-template-prompt-history::Payee '("Skipton-Cobble's" "McDonals's" "Skipton_Hongkong-takeway" "Skipton-Utopia"))
(setq org-read-date-history '("   " "2015-06-17    " "   "))
(setq buffer-name-history '("tryout.el" "*Shell Command Output*" "auto_back.el" "*Shell Command Output*" "*frequencies*" "2015-05-18-ubuntu-auto-15716qjo" "2015-05-18-ubuntu-auto-145517go" "2015-05-18-ubuntu-auto-13266pco" "2015-05-18-ubuntu-auto-145517go" "2015-05-18-ubuntu-auto-13266pco" "*R:10*" "*R:2*" "*R*" "*R:2*" "*R*" "ValidatingNhiPrecipitationMarginalDistribution.R" "tmp.el" "tmp.tangle.R" "ob-tangle.el" "tmp.R" "tmp.el" "tmp.R" "cron_backup_houly_log" "2015-05-19-ubuntu-auto-240360tP" "2015-05-19-ubuntu" "2015-05-19-ubuntu-auto-240360tP" "2015-05-19-ubuntu" "*Org Src 2013s7553-GFES.org[ R ]*" "2015-05-19-ubuntu-auto-240360tP" "2015-05-19-ubuntu"))
(setq minibuffer-history '("init.org" "jbarm" "new frame" "personal" "init.org" "person " #("~/java/plantuml" 0 15 (face font-lock-string-face font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t org-category "init" fontified t)) #("-" 0 1 (face git-commit-summary-face rear-nonsticky t fontified t)) "java" "init.org" "effectiveness-data-dir" "/home/yitang/git/qs/back" "refile" "112" "package install" "mu4e" "init. " "freq show" #("***" 0 2 (keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face (:foreground "#3F3F3F") wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("**" 0 2 (face org-hide)) org-category "init" fontified t) 2 3 (face org-level-3 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) composition (2 1 [9672]) wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("**" 0 2 (face org-hide)) org-category "init" fontified t)) "org indent region" "org" "org indent" #("End" 0 3 (face font-lock-string-face fontified t)) ".emacs$" ".emacs" "mess" "when" "emacs" "#+" "\\#\\+results:"))
